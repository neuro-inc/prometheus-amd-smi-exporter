on:
  push:
    tags: ['v*']
permissions:
#  actions: write  # for artifact removal
  contents: write  # for release creation
env:
  REGISTRY: ghcr.io
jobs:
  build-push:
    name: build and push image to ghcr.io
    runs-on: ubuntu-latest-m
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        # # Make the directory if it doesn't exist yet.
        # # This location is recommended by the distribution maintainers.
        # sudo mkdir --parents --mode=0755 /etc/apt/keyrings
        # # Download the key, convert the signing-key to a full
        # # keyring required by apt and store in the keyring directory
        # wget https://repo.radeon.com/rocm/rocm.gpg.key -O - | \
        #   gpg --dearmor | sudo tee /etc/apt/keyrings/rocm.gpg > /dev/null

        # echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/6.2/ubuntu jammy main" \
        #     | sudo tee /etc/apt/sources.list.d/amdgpu.list
        # sudo apt update
        # echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/6.2 jammy main" \
        #     | sudo tee --append /etc/apt/sources.list.d/rocm.list
        # echo -e 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' \
        #     | sudo tee /etc/apt/preferences.d/rocm-pin-600
        # sudo apt update

        # sudo apt install rocm

        make clean
        make
      working-directory: ./src

    - name: Login to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Extract Tag
      id: extract_tag
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    - name: Build Docker image
      env:
        TAG: ${{ env.IMAGE_TAG }}
      run: make docker_build 
      working-directory: ./src
    - name: Push Docker image
      env:
        TAG: ${{ env.IMAGE_TAG }}
        IMAGE_NAME: ${{ github.repository }}
      run: make push 
      working-directory: ./src